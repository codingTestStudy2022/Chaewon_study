/* 7-6.장난꾸러기 현수
새 학기가 시작되었습니다. 현수는 새 짝꿍을 만나 너무 신이 났습니다.
현수네 반에는 N명의 학생들이 있습니다.
선생님은 반 학생들에게 반 번호를 정해 주기 위해 운동장에 반 학생들을 키가 가장 작은 학 생부터 일렬로 키순으로 세웠습니다. 제일 앞에 가장 작은 학생부터 반 번호를 1번부터 N번까 지 부여합니다. 현수는 짝꿍보다 키가 큽니다. 그런데 현수가 앞 번호를 받고 싶어 짝꿍과 자 리를 바꿨습니다. 선생님은 이 사실을 모르고 학생들에게 서있는 순서대로 번호를 부여했습니 다.
현수와 짝꿍이 자리를 바꾼 반 학생들의 일렬로 서있는 키 정보가 주어질 때 현수가 받은 번 호와 현수 짝꿍이 받은 번호를 차례로 출력하는 프로그램을 작성하세요.

▣ 입력설명
첫 번째 줄에 자연수 N(5<=N<=100)이 주어진다.
두 번째 줄에 제일 앞에부터 일렬로 서있는 학생들의 키가 주어진다. 키(높이) 값 H는 (120<=H<=180)의 자연수 입니다.

▣ 출력설명
첫 번째 줄에 현수의 반 번호와 짝꿍의 반 번호를 차례로 출력합니다.

▣ 입력예제 
9
120 125 152 130 135 135 143 127 160
▣ 출력예제 
3 8
출력해설 : 키 정보 152가 현수이고, 127이 현수 짝꿍입니다.
 */

//내 풀이: for문으로 i부터 탐색, 오름차순인데 만약 뒷 키보다 더 큰 수가 나타나면 일단 answer에 push, 그 뒤부터 j로 탐색하면서 앞 번호보다 작은 수가 있는 위치를 찾아내 answer에 push하고 반복 종료.
function solution(arr){
    let answer = []
    let n = arr.length;

    for(let i=0;i<n;i++){
        if(arr[i]>arr[i+1]){
            //뒷번호보다 큰 키를 가진 경우 = 현수 
            answer.push(i+1)
            for(let j=i+2;j<n;j++){
                //뒷번호의 뒤부터 탐색 
                if(arr[j]<arr[j-1]){
                    //앞번호보다 작은 키를 가진 게 등장한 경우 = 짝궁
                    //실제 번호는 인덱스+1
                    answer.push(j+1) 
                }
            }
            break;
        }
    }
    return answer
}

let arr = [120,125,152,130,135,135,140,127,160]
console.log(solution2(arr))

/*해설 보고 새로운 풀이: 
기존 arr를 복사하고, 복사한 배열을 정렬시킨 sortArr를 생성. 원본 배열과 제대로 정렬된 배열에서 다른 부분이 현수와 짝꿍
*/
function solution2(arr){
    let sortArr = arr.concat();
    sortArr.sort((a,b)=>a-b);
    console.log(arr,sortArr)
    let answer = []
    for(let i=0;i<arr.length;i++){
        if(arr[i] !== sortArr[i]){
            answer.push(i+1)
        }
    }
    return answer
}
