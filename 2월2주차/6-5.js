/*6-5.쇠막대기
여러개의 쇠막대기를 레이저로 절단하려고 한다.
효율적인 작업을 위해서 쇠막대기를 아래에서 위로 겹쳐놓고, 레이저를 위에서 수직으로 발사하여 
쇠막대기들을 자른다. 쇠막대기와 레이저의 배치는 다음 조건을 만족한다.
- 쇠막대기는 자신보다 긴 쇠막대기 위에만 놓일 수 있다.
- 쇠막대기를 다른 쇠막대기 위에 놓는 경우 완전히 포함되도록 놓되, 끝점은 겹치지 않도록 놓느다.
- 각 쇠막대기를 자르는 레이저는 적어도 하나 존재한다.
- 레이저는 어떤 쇠막대기의 양 끝점과도 겹치지 않는다
아래 그림은 위 조건을 만족하는 예를 보여준다. 수평으로 그려진 굵은 실선은 쇠막대기이고,
점은 레이저의 위치, 수직으로 그려진 점선 화살표는 레이저의 발사 방향이다.

이러한 레이저와 쇠막대기의 배치는 다음과 같이 괄호를 이용하여 왼쪽부터 순서대로 표현할 수 있다.
1. 레이저는 여는 괄호와 닫는 괄호의 인접한 쌍 ‘( ) ’ 으로 표현된다. 또한, 모든 ‘( ) ’는 반 드시 레이저를 표현한다.
2. 쇠막대기의 왼쪽 끝은 여는 괄호 ‘ ( ’ 로, 오른쪽 끝은 닫힌 괄호 ‘) ’ 로 표현된다.
위 예의 괄호 표현은 그림 위에 주어져 있다.
쇠막대기는 레이저에 의해 몇 개의 조각으로 잘려지는데, 위 예에서 가장 위에 있는 두 개의 쇠막대기는 각각 3개와 2개의 조각으로 잘려지고, 이와 같은 방식으로 주어진 쇠막대기들은 총 17개의 조각으로 잘려진다.
쇠막대기와 레이저의 배치를 나타내는 괄호 표현이 주어졌을 때, 잘려진 쇠막대기 조각의 총 개수를 구하는 프로그램을 작성하시오.

내 풀이+해설 보완:
완전한 괄호만 모두 빼면 남은 괄호들이 조각의 개수가 됨.
⭕️여는 괄호 '('는 무조건 스택에 push한다.
⭕️닫는 괄호를 만났을 때, 만약 직전에 위치한 괄호가 여는 괄호면 레이저이므로 pop을 하고 push는 하지않는다. ✅보완: 이전까지 스택에 있는 여는 괄호의 개수를 answer에 누적한다.
❌아닌 경우는 그냥 push한다. !!=> ⭕️아닌 경우는 어쨌든 막대기의 끝조각이므로 pop()하고 +1을 해야함.
*/

function solution(s){
    let answer = 0;
    let stack = []

    for(let i=0;i<s.length;i++ ){
        if(s[i]==='(') stack.push(s[i])
        else{
            if(s[i-1] === "("){
                stack.pop()
                answer += stack.length
            }else{
                stack.pop()
                answer += 1
            }
        }
    }
    return answer
}

let s = '()(((()())(())()))(())'
console.log(solution(s))
